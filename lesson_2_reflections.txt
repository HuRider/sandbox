Q: What happens when you initialize a repository? Why do you need to do it?
A: Initializing a repository informs GIT that you'll like to start tracking files.  You need to do this in order to manage the configuration of the files.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: Branches would help keep my history organized as it separates a changes into it's own areas.

Reflect: Visualizing with Diagrams
Q: How do the diagrams help you visualize the branch structure?
A: Its easy to get lost with commits and parents and determining how things are connected. Having a diagram helps to solidify the connections.

Reflect: Merging Two Branches
Q: What is the result of merging two brances together? Why do we represent it in the diagram the way we do?
A: The result of merging two branches together combines all of the commits of the two branches.  Commits are combined and logged chronologically.  Git's automatic merging uses recursive logic that compares the common parent with the two distinct files.

Reflect: Automatic vs. Manual Merging
Q: What are the pros and cons of Git's automatic merging vs. always doing merges manually?
A: Using Git's automatic merging utility saves time, but the users will lose some visibility of the code which may introduce bugs in the future

